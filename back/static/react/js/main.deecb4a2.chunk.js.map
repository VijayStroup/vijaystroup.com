{"version":3,"sources":["contexts/ProjectContext.js","components/Nav.js","components/Landing.js","components/About.js","components/Projects.js","App.js","serviceWorker.js","index.js","components/Project.js"],"names":["ProjectContext","createContext","ProjectContextProvider","props","useState","id","name","img","active","icon","projects","setProjects","Provider","value","toggleTab","updatedState","map","project","push","children","Nav","HamNav","class","href","onClick","toggleBurger","style","color","className","initalHam","hamClass","setHamClass","length","role","aria-label","src","alt","join","aria-expanded","data-target","aria-hidden","Landing","fontSize","paddingBottom","About","target","max","Projects","useContext","key","paddingTop","Project","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","log","path","resolve","__filename","file","XMLHttpRequest","open","responseText","onreadystatechange"],"mappings":"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","file":"js/main.deecb4a2.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\n\nexport const ProjectContext = createContext()\n\nconst ProjectContextProvider = (props) => {\n  const [projects, setProjects] = useState([\n    {\n      id: 0,\n      name: 'Cupid',\n      img: '/static/imgs/cupid.png',\n      active: 'is-active',\n      icon: 'fas fa-heart'\n    },\n    {\n      id: 1,\n      name: 'Offline-Pass',\n      img: '/static/imgs/offline_pass.png',\n      active: '',\n      icon: 'fas fa-lock'\n    },\n    {\n      id: 2,\n      name: 'Personal Website',\n      img: '/static/imgs/personal_website.png',\n      active: '',\n      icon: 'fas fa-desktop'\n    },\n    {\n      id: 3,\n      name: 'Disney Data Science',\n      img: '/static/imgs/disney_data_science.png',\n      active: '',\n      icon: 'fas fa-magic'\n    }\n  ])\n\n  const toggleTab = (id) => {\n    let updatedState = []\n\n    projects.map((project) => {\n      if(id === project.id) {\n        updatedState.push({\n          id: project.id,\n          name: project.name,\n          img: project.img,\n          active: 'is-active',\n          icon: project.icon\n        })\n      } else {\n        updatedState.push({\n          id: project.id,\n          name: project.name,\n          img: project.img,\n          active: '',\n          icon: project.icon\n        })\n      }\n    })    \n\n    setProjects(updatedState)\n  }\n\n  return (\n    <ProjectContext.Provider value={{ projects, toggleTab }}>\n      {props.children}\n    </ProjectContext.Provider>\n  )\n}\n\nexport default ProjectContextProvider\n","import React, { useState } from 'react'\n\n\nconst Nav = () => {\n  const HamNav = () => {\n    return (\n      <aside class=\"menu\">\n        <ul class=\"menu-list\">\n          <li><a href=\"#about\" onClick={toggleBurger}>About</a></li>\n          <li><a href=\"#projects\" onClick={toggleBurger}>Projects</a></li>\n          <li><a href=\"#contact\" onClick={toggleBurger}>Contact</a></li>\n          <li>\n            <a href=\"/cli\"><i style={{ color: 'red' }} className=\"fas fa-terminal\"></i></a>\n          </li>\n        </ul>\n      </aside>\n    )\n  }\n\n  const initalHam = [\"navbar-burger\", \"burger\"]\n  const [hamClass, setHamClass] = useState(initalHam)\n\n  const toggleBurger = () => {\n    if(hamClass[hamClass.length - 1] === \"is-active\") {\n      setHamClass(initalHam)\n    } else {\n      setHamClass([...hamClass, \"is-active\"])\n    }\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar nav\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"/static/imgs/bitmoji.png\" alt=\"bitmoji\" />\n            <p id=\"navLogo\">Vijay Stroup</p>\n          </a>\n\n          <a role=\"button\" className={hamClass.join(' ')}  aria-label=\"menu\" aria-expanded=\"false\" data-target=\"nav\" onClick={toggleBurger}>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div id=\"nav\" className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <a className=\"navbar-item\" href=\"#about\">About</a>\n            <a className=\"navbar-item\" href=\"#projects\">Projects</a>\n            <a className=\"navbar-item\" href=\"#contact\">Contact</a>\n            <a className=\"navbar-item\" href=\"/cli\"><i style={{ color: 'red' }} className=\"fas fa-terminal\"></i></a>\n          </div>\n        </div>\n      </nav>\n\n      { hamClass[hamClass.length - 1] === \"is-active\" ? <HamNav /> : null }\n    </div>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\nconst Landing = () => {\n  return (\n    <section className=\"hero is-fullheight-with-navbar\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 style={{ fontSize: '40px' }} class=\"title\">Vijay Stroup</h1>\n          <h2 style={{ fontSize: '30px' }} class=\"subtitle\">Student | Programmer | Futurepreneur</h2>\n          <div className=\"columns is-centered\">\n            <div className=\"column is-narrow\">\n            <a><i class=\"fab fa-github is-size-1\"></i></a>\n            </div>\n            <div className=\"column is-narrow\">\n              <a><i class=\"fab fa-linkedin is-size-1\"></i></a>\n            </div>\n            <div className=\"column is-narrow\">\n              <a><i class=\"fab fa-bitbucket is-size-1\"></i></a>\n            </div>\n            <div className=\"column is-narrow\">\n              <a><i class=\"fab fa-gitlab is-size-1\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <a style={{ paddingBottom: '1%' }} href=\"#about\" className=\"has-text-centered\"><i class=\"fas fa-chevron-circle-down is-size-2\"></i></a>\n    </section>\n  )\n}\n\nexport default Landing\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div className=\"sectionContainer\">\n      <div className=\"container\">\n        <h1 id=\"about\" className=\"sectionTitle\">About</h1>\n\n        <div className=\"columns\">\n          <div className=\"column aboutText\">\n            <h1>Hi, I'm Vijay, and I am currently studying physics and computer science at The University of Central Florida.</h1>\n            <h3>\n              I love programming in variety of topics, however creating applications is my favorite.<br />\n              As of April 2020, I have ~2.0 years of programming experience.\n            </h3>\n            <br />\n            <p>Click <a href=\"/static/resume.pdf\" target=\"_blank\">HERE</a> to view my Resume.</p>\n          </div> {/* end coloumn left */}\n          <div className=\"column\">\n            <h1 className=\"has-text-centered programmingTitle\">Programming Languages</h1>\n            <br />\n            <p>Python</p><progress className=\"progress is-link\" value=\"100\" max=\"100\">100%</progress>\n            <p>C</p><progress className=\"progress is-link\" value=\"80\" max=\"100\">80%</progress>\n            <p>Javascript (Vanilla, NodeJS, ReactJS)</p><progress className=\"progress is-link\" value=\"80\" max=\"100\">80%</progress>\n            <p>HTML & CSS</p> <progress className=\"progress is-link\" value=\"90\" max=\"100\">90%</progress>\n            <p className=\"has-text-right\">* Skill levels are relative to Python.</p>\n            <br /><br /><br />\n            <h1 className=\"has-text-centered programmingTitle\">Programming Tools</h1>\n            <br />\n            <ul>\n              <li>- Various 'cloud' servers (e.g. Digital Ocean, Vultur, OVH, private servers)</li>\n              <li>- Git Version Control (including many web-based git control system such as GitHub)</li>\n              <li>- Unix command line</li>\n              <li>- Visual Studio Code</li>\n            </ul>\n          </div> {/* end coloumn right */}\n        </div> {/* end coloumns */}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import React, { useContext } from 'react'\nimport Project from './Project'\nimport { ProjectContext } from '../contexts/ProjectContext'\n\nconst Projects = () => {\n  const { projects, toggleTab } = useContext(ProjectContext);\n\n  return (\n    <div className=\"sectionContainer\">\n      <div className=\"container\">\n        <h1 id=\"projects\" className=\"sectionTitle\">Projects</h1>\n\n        <div className=\"columns is-centered\">\n          {projects.map((project) => {\n            return (\n              <div className=\"column\">\n                <img key={project.id} className=\"projImg\" src={project.img} onClick={() => toggleTab(project.id)} />\n              </div>\n            )\n          })}\n        </div>\n\n        <div style={{ paddingTop: '2%' }} class=\"tabs is-centered\">\n          <ul>\n            {projects.map((project) => {\n              return (\n                <li key={project.id} class={project.active} onClick={() => toggleTab(project.id)}>\n                  <a>\n                    <span class=\"icon is-small\"><i class={project.icon} aria-hidden=\"true\"></i></span>\n                    <span>{project.name}</span>\n                  </a>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n\n        <Project />\n\n        <h1 id=\"moreToCome\" className=\"has-text-centered\">More to come :)</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default Projects;\n","import React from 'react'\n\nimport Nav from './components/Nav' \nimport Landing from './components/Landing'\nimport About from './components/About'\nimport Projects from './components/Projects'\n\nimport ProjectContextProvider from './contexts/ProjectContext'\n\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all.js'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Landing />\n      <About />\n      <ProjectContextProvider>\n        <Projects />\n      </ProjectContextProvider>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useContext } from 'react'\nimport { ProjectContext } from '../contexts/ProjectContext'\nimport path from 'path'\n\nconst Project = () => {\n  const { projects } = useContext(ProjectContext);\n  console.log(path.resolve(__filename))\n\n  const file = new XMLHttpRequest()\n  file.open('GET', '', true)\n  console.log(file.responseText)\n  file.onreadystatechange = () => {\n    console.log('state change')\n  }\n\n  return (\n    <div>\n      {/* project Cupid */}\n\n      {/* project Offline-Pass */}\n\n      {/* project Personal Website */}\n\n      {/* project Disney Data Science */}\n    </div>\n  )\n}\n\nexport default Project\n"],"sourceRoot":""}