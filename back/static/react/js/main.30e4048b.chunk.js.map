{"version":3,"sources":["components/Projects.js","components/Nav.js","components/Landing.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Projects","HamNav","class","href","style","color","className","navbar_start","flexGrow","justifyContent","navbar_logo","fontFamily","fontSize","paddingLeft","Nav","initalHam","useState","hamClass","setHamClass","role","aria-label","src","alt","join","aria-expanded","data-target","onClick","length","aria-hidden","id","heroStyle","backgroundColor","heroTitleStyle","Landing","section_title","paddingTop","paddingBottom","programmingTitle","fontWeight","textDecoration","aboutText","aboutContainer","backgroundImage","Color","About","target","value","max","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"js/main.30e4048b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Projects = () => {\n  return (\n    <div>\n      projects\n    </div>\n  );\n}\n\nexport default Projects;\n","import React, { useState } from 'react'\nimport Projects from './Projects'\n\nconst HamNav = () => {\n  return (\n    <aside class=\"menu\">\n      <ul class=\"menu-list\">\n        <li><a href=\"#about\">About</a></li>\n        <li><a href=\"#projects\">Projects</a></li>\n        <li><a href=\"#contact\">Contact</a></li>\n        <li>\n          <a href=\"/cli\"><i style={{ color: 'red' }} className=\"fas fa-terminal\"></i></a>\n        </li>\n      </ul>\n    </aside>\n  )\n}\n\nconst Nav = () => {\n  const initalHam = [\"navbar-burger\", \"burger\"]\n  const [hamClass, setHamClass] = useState(initalHam)\n\n  const toggleBurger = () => {\n    if(hamClass[hamClass.length - 1] === \"is-active\") {\n      setHamClass(initalHam)\n    } else {\n      setHamClass([...hamClass, \"is-active\"])\n    }\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"/static/imgs/bitmoji.png\" alt=\"bitmoji\" />\n            <p style={navbar_logo}>Vijay Stroup</p>\n          </a>\n\n          <a role=\"button\" className={hamClass.join(' ')}  aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\" onClick={toggleBurger}>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div style={navbar_start} className=\"navbar-start\">\n            <a className=\"navbar-item\" href=\"#about\">About</a>\n            <a className=\"navbar-item\" href=\"#projects\">Projects</a>\n            <a className=\"navbar-item\" href=\"#contact\">Contact</a>\n          </div>\n          <div className=\"navbar-end\">\n            <a className=\"navbar-item\" href=\"/cli\"><i style={{ color: 'red' }} className=\"fas fa-terminal\"></i></a>\n          </div>\n        </div>\n      </nav>\n\n      { hamClass[hamClass.length - 1] === \"is-active\" ? <HamNav /> : null }\n    </div>\n  )\n}\n\nconst navbar_start = {\n  flexGrow: 1,\n  justifyContent: 'center'\n}\n\nconst navbar_logo = {\n  fontFamily: 'FredokaOne',\n  fontSize: '20px',\n  paddingLeft: '5px',\n  color: 'black'\n}\n\nconst iconStyle = {\n  color: 'red'\n}\n\nexport default Nav;\n","import React from 'react';\n\nconst Landing = () => {\n  return (\n    <section style={heroStyle} className=\"hero is-fullheight-with-navbar\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 class=\"title\" style={heroTitleStyle}>Vijay Stroup</h1>\n          <h2 class=\"subtitle\" style={heroTitleStyle}>Student & Programmer</h2>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nconst heroStyle = {\n  backgroundColor: 'black',\n}\n\nconst heroTitleStyle = {\n  color: 'white',\n}\n\nexport default Landing;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div style={aboutContainer}>\n      <div className=\"container\">\n        <h1 id=\"about\" style={section_title} className=\"has-text-centered\">About</h1>\n\n        <div className=\"columns\">\n          <div style={aboutText} className=\"column\">\n            <h1>Hi, I'm Vijay, and I am currently studying physics and computer science.</h1>\n            <h3>\n              I love programming in variety of topics, however tying code to physics/data is my favorite.\n              <br />As of April 2020, I have ~2.0 years of programming experience.\n            </h3>\n            <br />\n            <p>Click <a href=\"https://www.vijaystroup.com/static/resume.pdf\" target=\"_blank\">HERE</a> to view my Resume.</p>\n          </div> {/* end coloumn left */}\n          <div className=\"column\">\n            <h1 style={programmingTitle} className=\"has-text-centered\">Programming Languages</h1>\n            <br />\n            <p>Python</p><progress className=\"progress is-danger\" value=\"100\" max=\"100\">100%</progress>\n            <p>C</p><progress className=\"progress is-danger\" value=\"80\" max=\"100\">80%</progress>\n            <p>Javascript (Vanilla, NodeJS, ReactJS)</p><progress className=\"progress is-danger\" value=\"80\" max=\"100\">80%</progress>\n            <p>HTML & CSS</p> <progress className=\"progress is-danger\" value=\"90\" max=\"100\">90%</progress>\n            <p className=\"has-text-right\">* Skill levels are relative to Python.</p>\n            <br /><br /><br />\n            <h1 style={programmingTitle} className=\"has-text-centered\">Programming Tools</h1>\n            <br />\n            <ul>\n              <li>- Various 'cloud' servers (e.g. Digital Ocean, Vultur, OVH, private servers)</li>\n              <li>- Git Version Control (including many web-based git control system such as GitHub)</li>\n              <li>- Unix command line</li>\n              <li>- Visual Studio Code</li>\n            </ul>\n          </div> {/* end coloumn right */}\n        </div> {/* end coloumns */}\n      </div>\n    </div>\n  )\n}\n\nconst section_title = {\n  fontSize: '30px',\n  fontFamily: 'FredokaOne',\n  paddingTop: '5%',\n  paddingBottom: '3%'\n}\n\nconst programmingTitle = {\n  fontSize: '20px',\n  fontWeight: 'bold',\n  textDecoration: 'underline'\n}\n\nconst aboutText = {\n  paddingTop: '5%',\n  fontSize: '20px',\n  fontWeight: '800'\n}\n\nconst aboutContainer = {\n  backgroundColor: 'grey',\n  backgroundImage: 'linear-gradient(black, #313131)',\n  Color: 'white'\n}\n\nexport default About;\n","import React from 'react'\n\nimport Nav from './components/Nav' \nimport Landing from './components/Landing'\nimport About from './components/About'\nimport Projects from './components/Projects'\n\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Landing />\n      <About />\n      <Projects />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}